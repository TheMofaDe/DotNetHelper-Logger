### YamlMime:ManagedReference
items:
- uid: DotNetHelper_Logger.EventLogger
  commentId: T:DotNetHelper_Logger.EventLogger
  id: EventLogger
  parent: DotNetHelper_Logger
  children:
  - DotNetHelper_Logger.EventLogger.#ctor
  - DotNetHelper_Logger.EventLogger.#ctor(System.String)
  - DotNetHelper_Logger.EventLogger.ConsoleAndLog(System.Exception,DotNetHelper_Logger.LogSeverity)
  - DotNetHelper_Logger.EventLogger.ConsoleAndLog(System.String,DotNetHelper_Logger.LogSeverity)
  - DotNetHelper_Logger.EventLogger.ConsoleWrite(System.String,DotNetHelper_Logger.LogSeverity)
  - DotNetHelper_Logger.EventLogger.IsLoggingEnable
  - DotNetHelper_Logger.EventLogger.Log(System.String,DotNetHelper_Logger.LogSeverity)
  - DotNetHelper_Logger.EventLogger.LogError(System.Exception,DotNetHelper_Logger.LogSeverity)
  - DotNetHelper_Logger.EventLogger.LogError(System.String,System.Exception,DotNetHelper_Logger.LogSeverity)
  - DotNetHelper_Logger.EventLogger.MapToLogSeverity(System.Diagnostics.EventLogEntryType)
  - DotNetHelper_Logger.EventLogger.OnFailedLogAttempt
  - DotNetHelper_Logger.EventLogger.OnProcessExit
  - DotNetHelper_Logger.EventLogger.OnUnHandledException
  - DotNetHelper_Logger.EventLogger.Source
  - DotNetHelper_Logger.EventLogger.ThreadSafe
  langs:
  - csharp
  - vb
  name: EventLogger
  nameWithType: EventLogger
  fullName: DotNetHelper_Logger.EventLogger
  type: Class
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: EventLogger
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 20
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: 'public class EventLogger : ILogger'
    content.vb: >-
      Public Class EventLogger
          Implements ILogger
  inheritance:
  - System.Object
  implements:
  - DotNetHelper_Logger.Interface.ILogger
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotNetHelper_Logger.EventLogger.ThreadSafe
  commentId: P:DotNetHelper_Logger.EventLogger.ThreadSafe
  id: ThreadSafe
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: ThreadSafe
  nameWithType: EventLogger.ThreadSafe
  fullName: DotNetHelper_Logger.EventLogger.ThreadSafe
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: ThreadSafe
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 23
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public object ThreadSafe { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property ThreadSafe As Object
  overload: DotNetHelper_Logger.EventLogger.ThreadSafe*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Logger.EventLogger.Source
  commentId: P:DotNetHelper_Logger.EventLogger.Source
  id: Source
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: EventLogger.Source
  fullName: DotNetHelper_Logger.EventLogger.Source
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: Source
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 24
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public string Source { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Source As String
  overload: DotNetHelper_Logger.EventLogger.Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Logger.EventLogger.OnFailedLogAttempt
  commentId: E:DotNetHelper_Logger.EventLogger.OnFailedLogAttempt
  id: OnFailedLogAttempt
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: OnFailedLogAttempt
  nameWithType: EventLogger.OnFailedLogAttempt
  fullName: DotNetHelper_Logger.EventLogger.OnFailedLogAttempt
  type: Event
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: OnFailedLogAttempt
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 25
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public event EventHandler<Exception> OnFailedLogAttempt
    return:
      type: System.EventHandler{System.Exception}
    content.vb: Public Event OnFailedLogAttempt As EventHandler(Of Exception)
  implements:
  - DotNetHelper_Logger.Interface.ILogger.OnFailedLogAttempt
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.IsLoggingEnable
  commentId: P:DotNetHelper_Logger.EventLogger.IsLoggingEnable
  id: IsLoggingEnable
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: IsLoggingEnable
  nameWithType: EventLogger.IsLoggingEnable
  fullName: DotNetHelper_Logger.EventLogger.IsLoggingEnable
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: IsLoggingEnable
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 26
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public bool IsLoggingEnable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsLoggingEnable As Boolean
  overload: DotNetHelper_Logger.EventLogger.IsLoggingEnable*
  implements:
  - DotNetHelper_Logger.Interface.ILogger.IsLoggingEnable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.OnUnHandledException
  commentId: E:DotNetHelper_Logger.EventLogger.OnUnHandledException
  id: OnUnHandledException
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: OnUnHandledException
  nameWithType: EventLogger.OnUnHandledException
  fullName: DotNetHelper_Logger.EventLogger.OnUnHandledException
  type: Event
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: OnUnHandledException
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 27
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public event EventHandler<UnhandledExceptionEventArgs> OnUnHandledException
    return:
      type: System.EventHandler{System.UnhandledExceptionEventArgs}
    content.vb: Public Event OnUnHandledException As EventHandler(Of UnhandledExceptionEventArgs)
  implements:
  - DotNetHelper_Logger.Interface.ILogger.OnUnHandledException
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.OnProcessExit
  commentId: E:DotNetHelper_Logger.EventLogger.OnProcessExit
  id: OnProcessExit
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: OnProcessExit
  nameWithType: EventLogger.OnProcessExit
  fullName: DotNetHelper_Logger.EventLogger.OnProcessExit
  type: Event
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: OnProcessExit
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 28
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public event EventHandler<EventArgs> OnProcessExit
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Event OnProcessExit As EventHandler(Of EventArgs)
  implements:
  - DotNetHelper_Logger.Interface.ILogger.OnProcessExit
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.#ctor(System.String)
  commentId: M:DotNetHelper_Logger.EventLogger.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: EventLogger(String)
  nameWithType: EventLogger.EventLogger(String)
  fullName: DotNetHelper_Logger.EventLogger.EventLogger(System.String)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: .ctor
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 30
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public EventLogger(string source)
    parameters:
    - id: source
      type: System.String
    content.vb: Public Sub New(source As String)
  overload: DotNetHelper_Logger.EventLogger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.#ctor
  commentId: M:DotNetHelper_Logger.EventLogger.#ctor
  id: '#ctor'
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: EventLogger()
  nameWithType: EventLogger.EventLogger()
  fullName: DotNetHelper_Logger.EventLogger.EventLogger()
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: .ctor
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 36
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public EventLogger()
    content.vb: Public Sub New
  overload: DotNetHelper_Logger.EventLogger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.LogError(System.Exception,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.EventLogger.LogError(System.Exception,DotNetHelper_Logger.LogSeverity)
  id: LogError(System.Exception,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: LogError(Exception, LogSeverity)
  nameWithType: EventLogger.LogError(Exception, LogSeverity)
  fullName: DotNetHelper_Logger.EventLogger.LogError(System.Exception, DotNetHelper_Logger.LogSeverity)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: LogError
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 61
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public void LogError(Exception error, LogSeverity logSeverity = LogSeverity.Error)
    parameters:
    - id: error
      type: System.Exception
    - id: logSeverity
      type: DotNetHelper_Logger.LogSeverity
    content.vb: Public Sub LogError(error As Exception, logSeverity As LogSeverity = LogSeverity.Error)
  overload: DotNetHelper_Logger.EventLogger.LogError*
  implements:
  - DotNetHelper_Logger.Interface.ILogger.LogError(System.Exception,DotNetHelper_Logger.LogSeverity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.LogError(System.String,System.Exception,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.EventLogger.LogError(System.String,System.Exception,DotNetHelper_Logger.LogSeverity)
  id: LogError(System.String,System.Exception,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: LogError(String, Exception, LogSeverity)
  nameWithType: EventLogger.LogError(String, Exception, LogSeverity)
  fullName: DotNetHelper_Logger.EventLogger.LogError(System.String, System.Exception, DotNetHelper_Logger.LogSeverity)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: LogError
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 67
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public void LogError(string notes, Exception ex, LogSeverity logSeverity = LogSeverity.Error)
    parameters:
    - id: notes
      type: System.String
    - id: ex
      type: System.Exception
    - id: logSeverity
      type: DotNetHelper_Logger.LogSeverity
    content.vb: Public Sub LogError(notes As String, ex As Exception, logSeverity As LogSeverity = LogSeverity.Error)
  overload: DotNetHelper_Logger.EventLogger.LogError*
  implements:
  - DotNetHelper_Logger.Interface.ILogger.LogError(System.String,System.Exception,DotNetHelper_Logger.LogSeverity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.Log(System.String,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.EventLogger.Log(System.String,DotNetHelper_Logger.LogSeverity)
  id: Log(System.String,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: Log(String, LogSeverity)
  nameWithType: EventLogger.Log(String, LogSeverity)
  fullName: DotNetHelper_Logger.EventLogger.Log(System.String, DotNetHelper_Logger.LogSeverity)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: Log
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 84
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public void Log(string content, LogSeverity logSeverity = LogSeverity.Information)
    parameters:
    - id: content
      type: System.String
    - id: logSeverity
      type: DotNetHelper_Logger.LogSeverity
    content.vb: Public Sub Log(content As String, logSeverity As LogSeverity = LogSeverity.Information)
  overload: DotNetHelper_Logger.EventLogger.Log*
  implements:
  - DotNetHelper_Logger.Interface.ILogger.Log(System.String,DotNetHelper_Logger.LogSeverity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.ConsoleAndLog(System.String,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.EventLogger.ConsoleAndLog(System.String,DotNetHelper_Logger.LogSeverity)
  id: ConsoleAndLog(System.String,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: ConsoleAndLog(String, LogSeverity)
  nameWithType: EventLogger.ConsoleAndLog(String, LogSeverity)
  fullName: DotNetHelper_Logger.EventLogger.ConsoleAndLog(System.String, DotNetHelper_Logger.LogSeverity)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: ConsoleAndLog
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 99
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public void ConsoleAndLog(string content, LogSeverity logSeverity = LogSeverity.Information)
    parameters:
    - id: content
      type: System.String
    - id: logSeverity
      type: DotNetHelper_Logger.LogSeverity
    content.vb: Public Sub ConsoleAndLog(content As String, logSeverity As LogSeverity = LogSeverity.Information)
  overload: DotNetHelper_Logger.EventLogger.ConsoleAndLog*
  implements:
  - DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.String,DotNetHelper_Logger.LogSeverity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.ConsoleAndLog(System.Exception,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.EventLogger.ConsoleAndLog(System.Exception,DotNetHelper_Logger.LogSeverity)
  id: ConsoleAndLog(System.Exception,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: ConsoleAndLog(Exception, LogSeverity)
  nameWithType: EventLogger.ConsoleAndLog(Exception, LogSeverity)
  fullName: DotNetHelper_Logger.EventLogger.ConsoleAndLog(System.Exception, DotNetHelper_Logger.LogSeverity)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: ConsoleAndLog
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 105
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public void ConsoleAndLog(Exception error, LogSeverity logSeverity = LogSeverity.Error)
    parameters:
    - id: error
      type: System.Exception
    - id: logSeverity
      type: DotNetHelper_Logger.LogSeverity
    content.vb: Public Sub ConsoleAndLog(error As Exception, logSeverity As LogSeverity = LogSeverity.Error)
  overload: DotNetHelper_Logger.EventLogger.ConsoleAndLog*
  implements:
  - DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.Exception,DotNetHelper_Logger.LogSeverity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.ConsoleWrite(System.String,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.EventLogger.ConsoleWrite(System.String,DotNetHelper_Logger.LogSeverity)
  id: ConsoleWrite(System.String,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: ConsoleWrite(String, LogSeverity)
  nameWithType: EventLogger.ConsoleWrite(String, LogSeverity)
  fullName: DotNetHelper_Logger.EventLogger.ConsoleWrite(System.String, DotNetHelper_Logger.LogSeverity)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: ConsoleWrite
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 111
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public void ConsoleWrite(string message, LogSeverity logSeverity = LogSeverity.Information)
    parameters:
    - id: message
      type: System.String
    - id: logSeverity
      type: DotNetHelper_Logger.LogSeverity
    content.vb: Public Sub ConsoleWrite(message As String, logSeverity As LogSeverity = LogSeverity.Information)
  overload: DotNetHelper_Logger.EventLogger.ConsoleWrite*
  implements:
  - DotNetHelper_Logger.Interface.ILogger.ConsoleWrite(System.String,DotNetHelper_Logger.LogSeverity)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Logger.EventLogger.MapToLogSeverity(System.Diagnostics.EventLogEntryType)
  commentId: M:DotNetHelper_Logger.EventLogger.MapToLogSeverity(System.Diagnostics.EventLogEntryType)
  id: MapToLogSeverity(System.Diagnostics.EventLogEntryType)
  parent: DotNetHelper_Logger.EventLogger
  langs:
  - csharp
  - vb
  name: MapToLogSeverity(EventLogEntryType)
  nameWithType: EventLogger.MapToLogSeverity(EventLogEntryType)
  fullName: DotNetHelper_Logger.EventLogger.MapToLogSeverity(System.Diagnostics.EventLogEntryType)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Logger/EventLogger.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Logger.git
    id: MapToLogSeverity
    path: ../src/DotNetHelper-Logger/EventLogger.cs
    startLine: 139
  assemblies:
  - DotNetHelper-Logger
  namespace: DotNetHelper_Logger
  syntax:
    content: public LogSeverity MapToLogSeverity(EventLogEntryType type)
    parameters:
    - id: type
      type: System.Diagnostics.EventLogEntryType
    return:
      type: DotNetHelper_Logger.LogSeverity
    content.vb: Public Function MapToLogSeverity(type As EventLogEntryType) As LogSeverity
  overload: DotNetHelper_Logger.EventLogger.MapToLogSeverity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DotNetHelper_Logger
  commentId: N:DotNetHelper_Logger
  name: DotNetHelper_Logger
  nameWithType: DotNetHelper_Logger
  fullName: DotNetHelper_Logger
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetHelper_Logger.Interface.ILogger
  commentId: T:DotNetHelper_Logger.Interface.ILogger
  parent: DotNetHelper_Logger.Interface
  name: ILogger
  nameWithType: ILogger
  fullName: DotNetHelper_Logger.Interface.ILogger
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper_Logger.Interface
  commentId: N:DotNetHelper_Logger.Interface
  name: DotNetHelper_Logger.Interface
  nameWithType: DotNetHelper_Logger.Interface
  fullName: DotNetHelper_Logger.Interface
- uid: DotNetHelper_Logger.EventLogger.ThreadSafe*
  commentId: Overload:DotNetHelper_Logger.EventLogger.ThreadSafe
  name: ThreadSafe
  nameWithType: EventLogger.ThreadSafe
  fullName: DotNetHelper_Logger.EventLogger.ThreadSafe
- uid: DotNetHelper_Logger.EventLogger.Source*
  commentId: Overload:DotNetHelper_Logger.EventLogger.Source
  name: Source
  nameWithType: EventLogger.Source
  fullName: DotNetHelper_Logger.EventLogger.Source
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DotNetHelper_Logger.Interface.ILogger.OnFailedLogAttempt
  commentId: E:DotNetHelper_Logger.Interface.ILogger.OnFailedLogAttempt
  parent: DotNetHelper_Logger.Interface.ILogger
  name: OnFailedLogAttempt
  nameWithType: ILogger.OnFailedLogAttempt
  fullName: DotNetHelper_Logger.Interface.ILogger.OnFailedLogAttempt
- uid: System.EventHandler{System.Exception}
  commentId: T:System.EventHandler{System.Exception}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<Exception>
  nameWithType: EventHandler<Exception>
  fullName: System.EventHandler<System.Exception>
  nameWithType.vb: EventHandler(Of Exception)
  fullName.vb: System.EventHandler(Of System.Exception)
  name.vb: EventHandler(Of Exception)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Logger.EventLogger.IsLoggingEnable*
  commentId: Overload:DotNetHelper_Logger.EventLogger.IsLoggingEnable
  name: IsLoggingEnable
  nameWithType: EventLogger.IsLoggingEnable
  fullName: DotNetHelper_Logger.EventLogger.IsLoggingEnable
- uid: DotNetHelper_Logger.Interface.ILogger.IsLoggingEnable
  commentId: P:DotNetHelper_Logger.Interface.ILogger.IsLoggingEnable
  parent: DotNetHelper_Logger.Interface.ILogger
  name: IsLoggingEnable
  nameWithType: ILogger.IsLoggingEnable
  fullName: DotNetHelper_Logger.Interface.ILogger.IsLoggingEnable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DotNetHelper_Logger.Interface.ILogger.OnUnHandledException
  commentId: E:DotNetHelper_Logger.Interface.ILogger.OnUnHandledException
  parent: DotNetHelper_Logger.Interface.ILogger
  name: OnUnHandledException
  nameWithType: ILogger.OnUnHandledException
  fullName: DotNetHelper_Logger.Interface.ILogger.OnUnHandledException
- uid: System.EventHandler{System.UnhandledExceptionEventArgs}
  commentId: T:System.EventHandler{System.UnhandledExceptionEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<UnhandledExceptionEventArgs>
  nameWithType: EventHandler<UnhandledExceptionEventArgs>
  fullName: System.EventHandler<System.UnhandledExceptionEventArgs>
  nameWithType.vb: EventHandler(Of UnhandledExceptionEventArgs)
  fullName.vb: System.EventHandler(Of System.UnhandledExceptionEventArgs)
  name.vb: EventHandler(Of UnhandledExceptionEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UnhandledExceptionEventArgs
    name: UnhandledExceptionEventArgs
    nameWithType: UnhandledExceptionEventArgs
    fullName: System.UnhandledExceptionEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UnhandledExceptionEventArgs
    name: UnhandledExceptionEventArgs
    nameWithType: UnhandledExceptionEventArgs
    fullName: System.UnhandledExceptionEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Logger.Interface.ILogger.OnProcessExit
  commentId: E:DotNetHelper_Logger.Interface.ILogger.OnProcessExit
  parent: DotNetHelper_Logger.Interface.ILogger
  name: OnProcessExit
  nameWithType: ILogger.OnProcessExit
  fullName: DotNetHelper_Logger.Interface.ILogger.OnProcessExit
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Logger.EventLogger.#ctor*
  commentId: Overload:DotNetHelper_Logger.EventLogger.#ctor
  name: EventLogger
  nameWithType: EventLogger.EventLogger
  fullName: DotNetHelper_Logger.EventLogger.EventLogger
- uid: DotNetHelper_Logger.EventLogger.LogError*
  commentId: Overload:DotNetHelper_Logger.EventLogger.LogError
  name: LogError
  nameWithType: EventLogger.LogError
  fullName: DotNetHelper_Logger.EventLogger.LogError
- uid: DotNetHelper_Logger.Interface.ILogger.LogError(System.Exception,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.Interface.ILogger.LogError(System.Exception,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.Interface.ILogger
  isExternal: true
  name: LogError(Exception, LogSeverity)
  nameWithType: ILogger.LogError(Exception, LogSeverity)
  fullName: DotNetHelper_Logger.Interface.ILogger.LogError(System.Exception, DotNetHelper_Logger.LogSeverity)
  spec.csharp:
  - uid: DotNetHelper_Logger.Interface.ILogger.LogError(System.Exception,DotNetHelper_Logger.LogSeverity)
    name: LogError
    nameWithType: ILogger.LogError
    fullName: DotNetHelper_Logger.Interface.ILogger.LogError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Logger.Interface.ILogger.LogError(System.Exception,DotNetHelper_Logger.LogSeverity)
    name: LogError
    nameWithType: ILogger.LogError
    fullName: DotNetHelper_Logger.Interface.ILogger.LogError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: DotNetHelper_Logger.LogSeverity
  commentId: T:DotNetHelper_Logger.LogSeverity
  parent: DotNetHelper_Logger
  name: LogSeverity
  nameWithType: LogSeverity
  fullName: DotNetHelper_Logger.LogSeverity
- uid: DotNetHelper_Logger.Interface.ILogger.LogError(System.String,System.Exception,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.Interface.ILogger.LogError(System.String,System.Exception,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.Interface.ILogger
  isExternal: true
  name: LogError(String, Exception, LogSeverity)
  nameWithType: ILogger.LogError(String, Exception, LogSeverity)
  fullName: DotNetHelper_Logger.Interface.ILogger.LogError(System.String, System.Exception, DotNetHelper_Logger.LogSeverity)
  spec.csharp:
  - uid: DotNetHelper_Logger.Interface.ILogger.LogError(System.String,System.Exception,DotNetHelper_Logger.LogSeverity)
    name: LogError
    nameWithType: ILogger.LogError
    fullName: DotNetHelper_Logger.Interface.ILogger.LogError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Logger.Interface.ILogger.LogError(System.String,System.Exception,DotNetHelper_Logger.LogSeverity)
    name: LogError
    nameWithType: ILogger.LogError
    fullName: DotNetHelper_Logger.Interface.ILogger.LogError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Logger.EventLogger.Log*
  commentId: Overload:DotNetHelper_Logger.EventLogger.Log
  name: Log
  nameWithType: EventLogger.Log
  fullName: DotNetHelper_Logger.EventLogger.Log
- uid: DotNetHelper_Logger.Interface.ILogger.Log(System.String,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.Interface.ILogger.Log(System.String,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.Interface.ILogger
  isExternal: true
  name: Log(String, LogSeverity)
  nameWithType: ILogger.Log(String, LogSeverity)
  fullName: DotNetHelper_Logger.Interface.ILogger.Log(System.String, DotNetHelper_Logger.LogSeverity)
  spec.csharp:
  - uid: DotNetHelper_Logger.Interface.ILogger.Log(System.String,DotNetHelper_Logger.LogSeverity)
    name: Log
    nameWithType: ILogger.Log
    fullName: DotNetHelper_Logger.Interface.ILogger.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Logger.Interface.ILogger.Log(System.String,DotNetHelper_Logger.LogSeverity)
    name: Log
    nameWithType: ILogger.Log
    fullName: DotNetHelper_Logger.Interface.ILogger.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Logger.EventLogger.ConsoleAndLog*
  commentId: Overload:DotNetHelper_Logger.EventLogger.ConsoleAndLog
  name: ConsoleAndLog
  nameWithType: EventLogger.ConsoleAndLog
  fullName: DotNetHelper_Logger.EventLogger.ConsoleAndLog
- uid: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.String,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.String,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.Interface.ILogger
  isExternal: true
  name: ConsoleAndLog(String, LogSeverity)
  nameWithType: ILogger.ConsoleAndLog(String, LogSeverity)
  fullName: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.String, DotNetHelper_Logger.LogSeverity)
  spec.csharp:
  - uid: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.String,DotNetHelper_Logger.LogSeverity)
    name: ConsoleAndLog
    nameWithType: ILogger.ConsoleAndLog
    fullName: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.String,DotNetHelper_Logger.LogSeverity)
    name: ConsoleAndLog
    nameWithType: ILogger.ConsoleAndLog
    fullName: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.Exception,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.Exception,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.Interface.ILogger
  isExternal: true
  name: ConsoleAndLog(Exception, LogSeverity)
  nameWithType: ILogger.ConsoleAndLog(Exception, LogSeverity)
  fullName: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.Exception, DotNetHelper_Logger.LogSeverity)
  spec.csharp:
  - uid: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.Exception,DotNetHelper_Logger.LogSeverity)
    name: ConsoleAndLog
    nameWithType: ILogger.ConsoleAndLog
    fullName: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog(System.Exception,DotNetHelper_Logger.LogSeverity)
    name: ConsoleAndLog
    nameWithType: ILogger.ConsoleAndLog
    fullName: DotNetHelper_Logger.Interface.ILogger.ConsoleAndLog
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Logger.EventLogger.ConsoleWrite*
  commentId: Overload:DotNetHelper_Logger.EventLogger.ConsoleWrite
  name: ConsoleWrite
  nameWithType: EventLogger.ConsoleWrite
  fullName: DotNetHelper_Logger.EventLogger.ConsoleWrite
- uid: DotNetHelper_Logger.Interface.ILogger.ConsoleWrite(System.String,DotNetHelper_Logger.LogSeverity)
  commentId: M:DotNetHelper_Logger.Interface.ILogger.ConsoleWrite(System.String,DotNetHelper_Logger.LogSeverity)
  parent: DotNetHelper_Logger.Interface.ILogger
  isExternal: true
  name: ConsoleWrite(String, LogSeverity)
  nameWithType: ILogger.ConsoleWrite(String, LogSeverity)
  fullName: DotNetHelper_Logger.Interface.ILogger.ConsoleWrite(System.String, DotNetHelper_Logger.LogSeverity)
  spec.csharp:
  - uid: DotNetHelper_Logger.Interface.ILogger.ConsoleWrite(System.String,DotNetHelper_Logger.LogSeverity)
    name: ConsoleWrite
    nameWithType: ILogger.ConsoleWrite
    fullName: DotNetHelper_Logger.Interface.ILogger.ConsoleWrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Logger.Interface.ILogger.ConsoleWrite(System.String,DotNetHelper_Logger.LogSeverity)
    name: ConsoleWrite
    nameWithType: ILogger.ConsoleWrite
    fullName: DotNetHelper_Logger.Interface.ILogger.ConsoleWrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: DotNetHelper_Logger.LogSeverity
    name: LogSeverity
    nameWithType: LogSeverity
    fullName: DotNetHelper_Logger.LogSeverity
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Logger.EventLogger.MapToLogSeverity*
  commentId: Overload:DotNetHelper_Logger.EventLogger.MapToLogSeverity
  name: MapToLogSeverity
  nameWithType: EventLogger.MapToLogSeverity
  fullName: DotNetHelper_Logger.EventLogger.MapToLogSeverity
- uid: System.Diagnostics.EventLogEntryType
  commentId: T:System.Diagnostics.EventLogEntryType
  parent: System.Diagnostics
  isExternal: true
  name: EventLogEntryType
  nameWithType: EventLogEntryType
  fullName: System.Diagnostics.EventLogEntryType
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: true
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
